name: Scrape listing of declared Conservative nominations for leadership candidates

on:
  push:
  workflow_dispatch:
  # schedule:
  # - cron:  '*/5 * * * *'


jobs:
  shot-scraper:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        cache: "pip"
    - run: pip install -r requirements.txt

    - name: Scrape
      run: |
        wget --no-cache "https://docs.google.com/spreadsheets/d/1PRufWhh2YAoxPUJEXeVaEOe7rcT1IINOXijeLI6o9Cc/export?format=csv" -O noms.csv
        wget --no-cache "https://docs.google.com/spreadsheets/d/1t1MaeGTmOvmOOkUL8TDDJwqTTc-N1wmRxPeRe0k3yjM/export?gid=0&format=csv" -O smarkets-endorsements.csv
        wget --no-cache "https://docs.google.com/spreadsheets/d/1t1MaeGTmOvmOOkUL8TDDJwqTTc-N1wmRxPeRe0k3yjM/export?gid=400125858&format=csv" -O smarkets-leaderboard.csv
        wget --no-cache "https://docs.google.com/spreadsheets/d/1t1MaeGTmOvmOOkUL8TDDJwqTTc-N1wmRxPeRe0k3yjM/export?gid=1659341012&format=csv" -O smarkets-candidates.csv

    - name: GF Build SQLite database
      run: |
        rm -f all-noms.db
        git-history file all-noms.db noms.csv \
          --start-after 8d7041d83d9307b82cff1d580694bed781072041 \
          --ignore='' \
          --import csv \
          --import io \
          --convert '
            # select the header and single data row
            fp = io.StringIO("\n".join(content.decode("utf-8").splitlines()[1:3]))
            return list(csv.DictReader(fp))
            ' \
          --namespace gf_total
    - name: Sm Build SQLite database
      run: |
        git-history file all-noms.db smarkets-leaderboard.csv \
          --import io \
          --import pandas \
          --convert '
            # trim the top rows, transpose, take first 3 columns, remove dead column
            fp = io.StringIO(content.decode("utf-8"))
            df_in = pandas.read_csv(fp)
            df = df_in[2:].transpose()
            df.rename(columns=df.iloc[0], inplace=True)
            return df[2:3].to_dict("records")
            ' \
          --namespace sm_total

    - name: GF export totals time series to CSV
      run: |
        rm -f gf-noms-time-series.csv
        sqlite-utils query all-noms.db --csv 'select
          datetime(commits.commit_at) as date,
          gf_total.[Rishi Sunak],
          gf_total.[Boris Johnson],
          gf_total.[Penny Mordaunt]
        from
          gf_total
          join commits on gf_total._commit = commits.id
        order by
          commits.commit_at desc' > gf-noms-time-series.csv

    - name: Sm export totals time series to CSV
      run: |
        rm -f smarkets-leaderboard-time-series.csv
        sqlite-utils query all-noms.db --csv 'select
          datetime(commits.commit_at) as date,
          sm_total.[Rishi Sunak],
          sm_total.[Boris Johnson],
          sm_total.[Penny Mordaunt]
        from
          sm_total
          join commits on sm_total._commit = commits.id
        order by
          commits.commit_at desc' > smarkets-leaderboard-time-series.csv

    - name: Generate graphs
      run: |
        rm -f gf-noms-time-series.png
        python generate_graph.py gf-noms-time-series.csv gf-noms-time-series.png
        python generate_graph.py smarkets-leaderboard-time-series.csv smarkets-leaderboard-time-series.png
        python generate_graph.py gf-noms-time-series.csv smarkets-leaderboard-time-series.csv joint-time-series.png

    - name: Generate dynamic parts of README
      run: |
        cog -r README.md

    - name: Commit and push
      run: |-
        git config user.name "Automated"
        git config user.email "actions@users.noreply.github.com"
        git add -A
        timestamp=$(date -u)
        gf_headline=$(head -3 noms.csv | tail -1 | tr -dc '[:alnum:],' | cut -d, -f2-3)
        sm_headline=$(tail -3 smarkets-leaderboard.csv | cut -d, -f3 | tr '\n' ',')
        git commit -m "${timestamp} GF: ${gf_headline} | Sm:   ${sm_headline}" || exit 0
        git pull --rebase
        git push
